// Generated by view binder compiler. Do not edit!
package org.capstone.yourmate.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageView;
import android.widget.LinearLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.google.android.material.card.MaterialCardView;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;
import org.capstone.yourmate.R;

public final class LayoutItemPlaceBinding implements ViewBinding {
  @NonNull
  private final MaterialCardView rootView;

  @NonNull
  public final ImageView ivThumbnailPlace;

  @NonNull
  public final LinearLayout llCategory;

  @NonNull
  public final TextView tvBodyPlace;

  @NonNull
  public final TextView tvCategory;

  @NonNull
  public final TextView tvLocationPlace;

  @NonNull
  public final TextView tvRating;

  @NonNull
  public final TextView tvTitlePlace;

  private LayoutItemPlaceBinding(@NonNull MaterialCardView rootView,
      @NonNull ImageView ivThumbnailPlace, @NonNull LinearLayout llCategory,
      @NonNull TextView tvBodyPlace, @NonNull TextView tvCategory,
      @NonNull TextView tvLocationPlace, @NonNull TextView tvRating,
      @NonNull TextView tvTitlePlace) {
    this.rootView = rootView;
    this.ivThumbnailPlace = ivThumbnailPlace;
    this.llCategory = llCategory;
    this.tvBodyPlace = tvBodyPlace;
    this.tvCategory = tvCategory;
    this.tvLocationPlace = tvLocationPlace;
    this.tvRating = tvRating;
    this.tvTitlePlace = tvTitlePlace;
  }

  @Override
  @NonNull
  public MaterialCardView getRoot() {
    return rootView;
  }

  @NonNull
  public static LayoutItemPlaceBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static LayoutItemPlaceBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.layout_item_place, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static LayoutItemPlaceBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.ivThumbnailPlace;
      ImageView ivThumbnailPlace = ViewBindings.findChildViewById(rootView, id);
      if (ivThumbnailPlace == null) {
        break missingId;
      }

      id = R.id.llCategory;
      LinearLayout llCategory = ViewBindings.findChildViewById(rootView, id);
      if (llCategory == null) {
        break missingId;
      }

      id = R.id.tvBodyPlace;
      TextView tvBodyPlace = ViewBindings.findChildViewById(rootView, id);
      if (tvBodyPlace == null) {
        break missingId;
      }

      id = R.id.tvCategory;
      TextView tvCategory = ViewBindings.findChildViewById(rootView, id);
      if (tvCategory == null) {
        break missingId;
      }

      id = R.id.tvLocationPlace;
      TextView tvLocationPlace = ViewBindings.findChildViewById(rootView, id);
      if (tvLocationPlace == null) {
        break missingId;
      }

      id = R.id.tvRating;
      TextView tvRating = ViewBindings.findChildViewById(rootView, id);
      if (tvRating == null) {
        break missingId;
      }

      id = R.id.tvTitlePlace;
      TextView tvTitlePlace = ViewBindings.findChildViewById(rootView, id);
      if (tvTitlePlace == null) {
        break missingId;
      }

      return new LayoutItemPlaceBinding((MaterialCardView) rootView, ivThumbnailPlace, llCategory,
          tvBodyPlace, tvCategory, tvLocationPlace, tvRating, tvTitlePlace);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
