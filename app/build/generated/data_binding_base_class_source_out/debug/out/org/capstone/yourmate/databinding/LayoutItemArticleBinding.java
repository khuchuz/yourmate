// Generated by view binder compiler. Do not edit!
package org.capstone.yourmate.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageView;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.google.android.material.card.MaterialCardView;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;
import org.capstone.yourmate.R;

public final class LayoutItemArticleBinding implements ViewBinding {
  @NonNull
  private final MaterialCardView rootView;

  @NonNull
  public final ImageView ivThumbnailArticle;

  @NonNull
  public final TextView tvArticleDate;

  @NonNull
  public final TextView tvBodyArticle;

  @NonNull
  public final TextView tvTitleArticle;

  private LayoutItemArticleBinding(@NonNull MaterialCardView rootView,
      @NonNull ImageView ivThumbnailArticle, @NonNull TextView tvArticleDate,
      @NonNull TextView tvBodyArticle, @NonNull TextView tvTitleArticle) {
    this.rootView = rootView;
    this.ivThumbnailArticle = ivThumbnailArticle;
    this.tvArticleDate = tvArticleDate;
    this.tvBodyArticle = tvBodyArticle;
    this.tvTitleArticle = tvTitleArticle;
  }

  @Override
  @NonNull
  public MaterialCardView getRoot() {
    return rootView;
  }

  @NonNull
  public static LayoutItemArticleBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static LayoutItemArticleBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.layout_item_article, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static LayoutItemArticleBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.ivThumbnailArticle;
      ImageView ivThumbnailArticle = ViewBindings.findChildViewById(rootView, id);
      if (ivThumbnailArticle == null) {
        break missingId;
      }

      id = R.id.tvArticleDate;
      TextView tvArticleDate = ViewBindings.findChildViewById(rootView, id);
      if (tvArticleDate == null) {
        break missingId;
      }

      id = R.id.tvBodyArticle;
      TextView tvBodyArticle = ViewBindings.findChildViewById(rootView, id);
      if (tvBodyArticle == null) {
        break missingId;
      }

      id = R.id.tvTitleArticle;
      TextView tvTitleArticle = ViewBindings.findChildViewById(rootView, id);
      if (tvTitleArticle == null) {
        break missingId;
      }

      return new LayoutItemArticleBinding((MaterialCardView) rootView, ivThumbnailArticle,
          tvArticleDate, tvBodyArticle, tvTitleArticle);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
