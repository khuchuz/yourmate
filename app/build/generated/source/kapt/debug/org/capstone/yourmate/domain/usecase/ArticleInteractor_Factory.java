// Generated by Dagger (https://dagger.dev).
package org.capstone.yourmate.domain.usecase;

import dagger.internal.DaggerGenerated;
import dagger.internal.Factory;
import javax.inject.Provider;
import org.capstone.yourmate.data.repository.ArticleRepository;

@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class ArticleInteractor_Factory implements Factory<ArticleInteractor> {
  private final Provider<ArticleRepository> articleRepositoryProvider;

  public ArticleInteractor_Factory(Provider<ArticleRepository> articleRepositoryProvider) {
    this.articleRepositoryProvider = articleRepositoryProvider;
  }

  @Override
  public ArticleInteractor get() {
    return newInstance(articleRepositoryProvider.get());
  }

  public static ArticleInteractor_Factory create(
      Provider<ArticleRepository> articleRepositoryProvider) {
    return new ArticleInteractor_Factory(articleRepositoryProvider);
  }

  public static ArticleInteractor newInstance(ArticleRepository articleRepository) {
    return new ArticleInteractor(articleRepository);
  }
}
