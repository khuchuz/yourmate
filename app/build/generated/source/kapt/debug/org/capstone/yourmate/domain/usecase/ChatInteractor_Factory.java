// Generated by Dagger (https://dagger.dev).
package org.capstone.yourmate.domain.usecase;

import dagger.internal.DaggerGenerated;
import dagger.internal.Factory;
import javax.inject.Provider;
import org.capstone.yourmate.domain.repository.IChatRepository;

@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class ChatInteractor_Factory implements Factory<ChatInteractor> {
  private final Provider<IChatRepository> chatRepositoryProvider;

  public ChatInteractor_Factory(Provider<IChatRepository> chatRepositoryProvider) {
    this.chatRepositoryProvider = chatRepositoryProvider;
  }

  @Override
  public ChatInteractor get() {
    return newInstance(chatRepositoryProvider.get());
  }

  public static ChatInteractor_Factory create(Provider<IChatRepository> chatRepositoryProvider) {
    return new ChatInteractor_Factory(chatRepositoryProvider);
  }

  public static ChatInteractor newInstance(IChatRepository chatRepository) {
    return new ChatInteractor(chatRepository);
  }
}
