// Generated by Dagger (https://dagger.dev).
package org.capstone.yourmate.data.repository;

import com.google.firebase.auth.FirebaseAuth;
import com.google.firebase.database.FirebaseDatabase;
import dagger.internal.DaggerGenerated;
import dagger.internal.Factory;
import javax.inject.Provider;

@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class ContactRepository_Factory implements Factory<ContactRepository> {
  private final Provider<FirebaseAuth> authProvider;

  private final Provider<FirebaseDatabase> databaseProvider;

  public ContactRepository_Factory(Provider<FirebaseAuth> authProvider,
      Provider<FirebaseDatabase> databaseProvider) {
    this.authProvider = authProvider;
    this.databaseProvider = databaseProvider;
  }

  @Override
  public ContactRepository get() {
    return newInstance(authProvider.get(), databaseProvider.get());
  }

  public static ContactRepository_Factory create(Provider<FirebaseAuth> authProvider,
      Provider<FirebaseDatabase> databaseProvider) {
    return new ContactRepository_Factory(authProvider, databaseProvider);
  }

  public static ContactRepository newInstance(FirebaseAuth auth, FirebaseDatabase database) {
    return new ContactRepository(auth, database);
  }
}
