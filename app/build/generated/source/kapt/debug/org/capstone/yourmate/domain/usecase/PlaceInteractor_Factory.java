// Generated by Dagger (https://dagger.dev).
package org.capstone.yourmate.domain.usecase;

import dagger.internal.DaggerGenerated;
import dagger.internal.Factory;
import javax.inject.Provider;
import org.capstone.yourmate.data.repository.PlaceRepository;

@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class PlaceInteractor_Factory implements Factory<PlaceInteractor> {
  private final Provider<PlaceRepository> placeRepositoryProvider;

  public PlaceInteractor_Factory(Provider<PlaceRepository> placeRepositoryProvider) {
    this.placeRepositoryProvider = placeRepositoryProvider;
  }

  @Override
  public PlaceInteractor get() {
    return newInstance(placeRepositoryProvider.get());
  }

  public static PlaceInteractor_Factory create(Provider<PlaceRepository> placeRepositoryProvider) {
    return new PlaceInteractor_Factory(placeRepositoryProvider);
  }

  public static PlaceInteractor newInstance(PlaceRepository placeRepository) {
    return new PlaceInteractor(placeRepository);
  }
}
