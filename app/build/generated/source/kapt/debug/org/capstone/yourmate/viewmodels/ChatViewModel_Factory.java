// Generated by Dagger (https://dagger.dev).
package org.capstone.yourmate.viewmodels;

import dagger.internal.DaggerGenerated;
import dagger.internal.Factory;
import javax.inject.Provider;
import org.capstone.yourmate.domain.usecase.ChatUseCase;

@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class ChatViewModel_Factory implements Factory<ChatViewModel> {
  private final Provider<ChatUseCase> chatUseCaseProvider;

  public ChatViewModel_Factory(Provider<ChatUseCase> chatUseCaseProvider) {
    this.chatUseCaseProvider = chatUseCaseProvider;
  }

  @Override
  public ChatViewModel get() {
    return newInstance(chatUseCaseProvider.get());
  }

  public static ChatViewModel_Factory create(Provider<ChatUseCase> chatUseCaseProvider) {
    return new ChatViewModel_Factory(chatUseCaseProvider);
  }

  public static ChatViewModel newInstance(ChatUseCase chatUseCase) {
    return new ChatViewModel(chatUseCase);
  }
}
